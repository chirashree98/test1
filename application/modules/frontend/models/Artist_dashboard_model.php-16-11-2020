<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

class Artist_dashboard_model extends CI_Model
{

    public function __construct()
    {

        parent::__construct();
    }

    public function design_service_type()
    {
        $this->db->select('*');
        $this->db->from('ds_services_types');
        $this->db->where('status', 'Y');
        $query = $this->db->get();
        $row = $query->result_array();
        return $row;
    }

    public function get_design_type_slug($design_id)
    {
        $this->db->select('*');
        $this->db->from('ds_services_types');
        $this->db->where('status', 'Y');
        $this->db->where('id', $design_id);
        $query = $this->db->get();
        $row = $query->result_array();
        return $row;
    }

    public function accept_decline_request_list($artist_id, $filter_designer_id = FALSE)
    {
        $this->db->select('O.created_date, C.first_name, C.last_name, O.message, O.request_action, O.id AS order_table_id, ST.type_name, O.customer_id');
        $this->db->from('ds_orders AS O');
        $this->db->join('ds_users AS AT', 'AT.id = O.userid', 'left');
        $this->db->join('ds_users AS C', 'C.id = O.customer_id', 'left');
        $this->db->join('ds_services_types AS ST', 'ST.id = O.service_id', 'left');
        if ($filter_designer_id) {
            $this->db->where('O.service_id', $filter_designer_id);
        }
        $this->db->where('O.userid', $artist_id);
        $this->db->order_by('O.created_date', 'DESC');
        $query = $this->db->get();
        $row = $query->result_array();
        return $row;
    }

    public function accept_decline_request_view($order_table_id)
    {
        $this->db->select('O.created_date, C.first_name, C.last_name, CP.profile_image, O.message, O.request_action, O.id AS order_table_id, ST.type_name, SEF.file_name, O.request_action, O.created_date, O.service_id, O.customer_id, O.userid AS designer_id');
        $this->db->from('ds_orders AS O');
        $this->db->join('ds_users AS AT', 'AT.id = O.userid', 'left');
        $this->db->join('ds_users AS C', 'C.id = O.customer_id', 'left');

        $this->db->join('ds_user_other_details AS CP', 'CP.user_id = C.id', 'left');

        $this->db->join('ds_services_types AS ST', 'ST.id = O.service_id', 'left');
        $this->db->join('service_enq_files AS SEF', 'SEF.order_table_id = O.id', 'left');
        $this->db->where('O.id', $order_table_id);
        $query = $this->db->get();
        $row = $query->result_array();
        return $row;
    }

    function update_order_action($order_table_id, $value)
    {
        $this->db->set('request_action', $value);
        $this->db->set('request_action_date', date('Y-m-d H:i:s'));
        $this->db->where('id', $order_table_id);
        $query = $this->db->update('ds_orders');
        return $query;
    }

    public function chat_data_fetch($order_table_id)
    {
        $this->db->select('AT.first_name AS designer_fname, AT.last_name AS designer_lname, ATP.profile_image AS designer_profile_pic, C.first_name AS customer_fname, C.last_name AS customer_lname, CP.profile_image AS customer_profile_pic, DC.text_messages, DC.added_date_time, DC.chat_show_status, O.created_date AS order_created_date, O.request_action_date AS request_accepted_date, O.request_action, DC.id AS chat_id');
        $this->db->from('ds_designer_chat AS DC');
        $this->db->join('ds_orders AS O', 'O.id = DC.order_table_id', 'left');

        $this->db->join('ds_users AS AT', 'AT.id = DC.chat_person_id', 'left');
        $this->db->join('ds_users AS C', 'C.id = DC.customer_id', 'left');

        $this->db->join('ds_user_other_details AS ATP', 'ATP.user_id = AT.id', 'left');
        $this->db->join('ds_user_other_details AS CP', 'CP.user_id = C.id', 'left');

        $this->db->join('ds_services_types AS ST', 'ST.id = DC.design_type_id', 'left');
        $this->db->where('DC.order_table_id', $order_table_id);
        $this->db->where('O.request_action', 'ACCEPTED');
        $this->db->order_by("DC.added_date_time", "asc");
        $query = $this->db->get();
        $row = $query->result_array();
        return $row;
    }

    public function insert_chat_data($column_data = array())
    {
        $this->db->insert('ds_designer_chat', $column_data);
        $query = $this->db->insert_id();
        return $query;
    }

    public function insert_chat_attachments($column_data = array())
    {
        $query = $this->db->insert('ds_designer_chat_attachments', $column_data);
        return $query;
    }

    public function update_unseen_messages($order_table_id = FALSE, $customer_id = FALSE)
    {
        $this->db->set('chat_show_status', 'SEEN');
        $this->db->where('order_table_id', $order_table_id);
        $this->db->where('customer_id', $customer_id);
        $query = $this->db->update('ds_designer_chat');
        return $query;
    }

    public function count_chat_customer($order_table_id = FALSE, $customer_id = FALSE)
    {
        $this->db->where('order_table_id', $order_table_id);
        $this->db->where('customer_id', $customer_id);
        $this->db->where('chat_show_status', 'UNSEEN');
        $this->db->from('ds_designer_chat');
        $query = $this->db->count_all_results();
        return $query;
    }

    public function total_count_chat_customer($customer_id = FALSE)
    {
        $this->db->where('customer_id', $customer_id);
        $this->db->where('chat_show_status', 'UNSEEN');
        $this->db->from('ds_designer_chat');
        $query = $this->db->count_all_results();
        return $query;
    }

    public function check_design_request_hour($order_id = FALSE)
    {
        $this->db->select('DRH.hours, O.created_date AS design_request_date_time');
        $this->db->from('ds_orders AS O');
        $this->db->join('ds_design_request_hours AS DRH', 'O.service_id = DRH.design_service_type_id', 'left');
        $this->db->where('O.id', $order_id);
        $this->db->where('O.request_action', 'ACCEPTED');
        $query = $this->db->get();

        $design_conversation_status = FALSE;

        if ($query->num_rows() > 0) {
            $design_request_hour = $query->result_array();

            $design_request_date_time = $design_request_hour[0]['design_request_date_time'];
            $design_request_hours = $design_request_hour[0]['hours'];
            $current_date_time = time();

            $expire_date_time = strtotime($design_request_date_time) + ($design_request_hours * 3600);

            if ($expire_date_time >= $current_date_time) {
                $design_conversation_status = TRUE;
            } else {
                $design_conversation_status = FALSE;
            }
        }

        return $design_conversation_status;
    }

    public function get_wallet_amount($user_id)
    {
        $this->db->select('wallet_amount');
        $this->db->from('ds_users');
        $this->db->where('id', $user_id);
        $result = $this->db->get()->row_array();

        return $result;
    }

    public function get_paid_amount_from_order($order_id)
    {
        $this->db->select('amountpaid');
        $this->db->from('ds_orders');
        $this->db->where('id', $order_id);
        $result = $this->db->get()->row_array();

        return $result;
    }

    public function update_wallet_amount($user_id, $wallet_amount)
    {

        $this->db->set('wallet_amount', $wallet_amount);
        $this->db->where('id', $user_id);
        $this->db->update('ds_users');
    }

    public function customer_request_cart($order_table_id)
    {
        $this->db->select('ds_products.*,ds_temp_cart.attributes as cart_attr,ds_temp_cart.qty as cart_qty,ds_temp_cart.cart_id  as cart_id, ds_temp_cart.block_status');
        $this->db->from('ds_temp_cart');
        $this->db->join('ds_products', 'ds_temp_cart.p_id=ds_products.p_id', 'left');
        $this->db->where(array('ds_temp_cart.design_order_id' => $order_table_id));
        $query = $this->db->get();
        $result = $query->result();
        return $result;
    }



}

?>