<?php

defined('BASEPATH') or exit('No direct script access allowed');

class User_management extends MX_Controller
{

    public function __construct()
    {
        parent::__construct();
        $this->load->helper(array('url', 'form', 'html', 'text'));
        $this->load->library(array('session', 'form_validation', 'email', 'upload', 'image_lib'));
        $this->load->model(array('common_model', 'custom_model'));
        if ($this->session->userdata('ADMIN_ID') == '') {
            redirect('admin');
        }
    }

    public function all_user()
    {
        $this->db->select('*,ds_users.id as user_id');
        $this->db->from('ds_users');
        $this->db->Join('ds_user_types', 'ds_users.role_id = ds_user_types.id');
        $this->db->Join('ds_country', 'ds_users.country_id = ds_country.id');
//        $this->db->Join('ds_user_membership', 'ds_users.membership_id = ds_user_membership.id');
        $this->db->order_by('ds_users.id', 'DESC');
        $data['query'] = $this->db->get();
        $this->load->view('user/all-user', $data);
    }

    public function view_user()
    {
        $data = array();
        $id = $this->uri->segment(4);
        $this->db->select('*,ds_users.id as user_id');
        $this->db->from('ds_users');
        $this->db->Join('ds_user_types', 'ds_users.role_id = ds_user_types.id');
        $this->db->Join('ds_country', 'ds_users.country_id = ds_country.id');
//        $this->db->Join('ds_user_membership', 'ds_users.membership_id = ds_user_membership.id');
        $this->db->where('ds_users.id', $id);
        $data['query'] = $this->db->get()->row_array();

        $this->load->view('user/view-user', $data);
    }

    public function delete_user()
    {
        $id = $this->uri->segment(4);
        $this->common_model->Delete('ds_users', $id, 'id');
        $message = '<div class="alert alert-success"><p>User has been deleted successfully.</p></div>';
        $this->session->set_flashdata('success', $message);
        redirect('admin/user_management/all_user');
    }

    public function all_customer()
    {
        $this->db->select('*,ds_users.id as user_id');
        $this->db->from('ds_users');
        $this->db->Join('ds_user_types', 'ds_users.role_id = ds_user_types.id');
        $this->db->Join('ds_country', 'ds_users.country_id = ds_country.id');
        $this->db->where('ds_users.role_id', '4');
        $this->db->order_by('ds_users.id', 'DESC');
        $data['query'] = $this->db->get();
        $this->load->view('user/all-customer', $data);
    }

    public function view_customer()
    {
        $data = array();
        $id = $this->uri->segment(4);
        $this->db->select('*,ds_users.id as user_id');
        $this->db->from('ds_users');
        $this->db->Join('ds_user_types', 'ds_users.role_id = ds_user_types.id');
        $this->db->Join('ds_country', 'ds_users.country_id = ds_country.id');
        $this->db->where('ds_users.id', $id);
        $data['query'] = $this->db->get()->row_array();

        $this->load->view('user/view-customer', $data);
    }

    public function delete_customer()
    {
        $id = $this->uri->segment(4);
        $this->common_model->Delete('ds_users', $id, 'id');
        $message = '<div class="alert alert-success"><p>User has been deleted successfully.</p></div>';
        $this->session->set_flashdata('success', $message);
        redirect('admin/user_management/all_customer');
    }

    public function all_designer()
    {
        $this->db->select('*,ds_users.id as user_id');
        $this->db->from('ds_users');
        $this->db->Join('ds_user_types', 'ds_users.role_id = ds_user_types.id');
        $this->db->Join('ds_country', 'ds_users.country_id = ds_country.id');
        $this->db->where('ds_users.role_id', '1');
        $this->db->order_by('ds_users.id', 'DESC');
        $data['query'] = $this->db->get();
        $this->load->view('user/all-designer', $data);
    }

    public function view_designer()
    {
        $data = array();
        $id = $this->uri->segment(4);
        $this->db->select('*,ds_users.id as user_id,ds_membership.name as membership_name,ds_membership.description as membership_description');
        $this->db->from('ds_users');
        $this->db->Join('ds_user_types', 'ds_users.role_id = ds_user_types.id', 'left');
        $this->db->Join('ds_country', 'ds_users.country_id = ds_country.id', 'left');
        $this->db->Join('ds_artist_service', 'ds_users.service_id = ds_artist_service.id', 'left');
        $this->db->Join('ds_membership', 'ds_users.membership_id = ds_membership.id', 'left');
        $this->db->where('ds_users.id', $id);
        $data['query'] = $this->db->get()->row_array();

        $this->load->view('user/view-designer', $data);
    }

    public function delete_designer()
    {
        $id = $this->uri->segment(4);
        $this->common_model->Delete('ds_users', $id, 'id');
        $message = '<div class="alert alert-success"><p>User has been deleted successfully.</p></div>';
        $this->session->set_flashdata('success', $message);
        redirect('admin/user_management/all_designer');
    }

    public function all_designstore()
    {
        $this->db->select('*,ds_users.id as user_id');
        $this->db->from('ds_users');
        $this->db->Join('ds_user_types', 'ds_users.role_id = ds_user_types.id');
        $this->db->Join('ds_country', 'ds_users.country_id = ds_country.id');
        $this->db->where('ds_users.role_id', '6');
        $this->db->order_by('ds_users.id', 'DESC');
        $data['query'] = $this->db->get();
        $this->load->view('user/all-designstore', $data);
    }

    public function view_designstore()
    {
        $data = array();
        $id = $this->uri->segment(4);
        $this->db->select('*,ds_users.id as user_id,ds_membership.name as membership_name,ds_membership.description as membership_description');
        $this->db->from('ds_users');
        $this->db->Join('ds_user_types', 'ds_users.role_id = ds_user_types.id');
        $this->db->Join('ds_country', 'ds_users.country_id = ds_country.id');
        $this->db->Join('ds_membership', 'ds_users.membership_id = ds_membership.id');
        $this->db->where('ds_users.id', $id);
        $data['query'] = $this->db->get()->row_array();

        $this->load->view('user/view-designstore', $data);
    }

    public function delete_designstore()
    {
        $id = $this->uri->segment(4);
        $this->common_model->Delete('ds_users', $id, 'id');
        $message = '<div class="alert alert-success"><p>User has been deleted successfully.</p></div>';
        $this->session->set_flashdata('success', $message);
        redirect('admin/user_management/all_designstore');
    }

    public function change_user_status()
    {

        $data = array();
        $id = $this->input->post('id');
        $value = $this->input->post('val');
        $save_data['is_approved'] = $value;
        $this->common_model->UpdateRecord($save_data, 'ds_users', 'id', $id);

        $user_info = $this->common_model->RetriveRecordByWhereRow('ds_users', array('id' => $id));
        $from_mail = $this->common_model->RetriveRecordByWhere('ds_settings', array());
        foreach ($from_mail->result() as $row) {
            $settings[$row->settings_name] = $row->settings_value;
        }
        if ($value == '1') {
            $maildata['subject'] = 'Approval of Registration Request  ';
            $maildata['email_template'] = 'user_approve_by_admin';
        } else {
            $maildata['subject'] = 'Not Approval of Registration Request  ';
            $maildata['email_template'] = 'user_not_approve_by_admin';
        }
        $maildata['to'] = $user_info['email'];
        $maildata['dear_name'] = $getData['first_name'];
        $maildata['site_url'] = base_url();
        $maildata['user_email'] = $user_info['email'];
        $maildata['user_pass'] = base64_decode($user_info['password']);
        $maildata['from'] = $settings['admin_from_mail_id'];
        $maildata['facebook_url'] = $settings['facebook_url'];
        $maildata['twitter_url'] = $settings['twitter_url'];
        $maildata['pinterest'] = $settings['pinterest'];
        $maildata['footer_copyright_text'] = $settings['footer_copyright_text'];
        $result = send_mail($maildata);

//        ******* Send mail End ************


        echo 'ok';
    }

    public function subscription_log(){
        $id=$this->uri->segment(4);
        $data['user_info'] = $this->common_model->RetriveRecordByWhereRow('ds_subscribed', array('id' => $id));
        $data['from_mail'] = $this->common_model->RetriveRecordByWhere('ds_settings', array('id'=>4));


        $this->load->view('subscription/newsform',$data);

        $id=$this->uri->segment(4);
        $user_info = $this->common_model->RetriveRecordByWhereRow('ds_subscribed', array('id' => $id));
        $from_mail = $this->common_model->RetriveRecordByWhere('ds_settings', array());

        foreach ($from_mail->result() as $row) {
            $settings[$row->settings_name] = $row->settings_value;
        }
        $subject=$this->input->post('subject');
        $message=$this->input->post('message');

        $maildata['subject'] = $subject;
        //$maildata['message'] = $body;
        $maildata['email_template'] = 'user_approve_by_admin';
        $maildata['to'] = $user_info['email'];
        $maildata['site_url'] = base_url();
        $maildata['user_email'] = $user_info['email'];
        $maildata['from'] = $settings['admin_from_mail_id'];
        $maildata['message'] = $message;
        $maildata['email_template'] = 'subscription_mail';
        $maildata['facebook_url'] = $settings['facebook_url'];
        $maildata['twitter_url'] = $settings['twitter_url'];
        $maildata['pinterest'] = $settings['pinterest'];
        $maildata['footer_copyright_text'] = $settings['footer_copyright_text'];
        $result = send_mail($maildata);
        //pr($result);
        if($_SERVER['REQUEST_METHOD']=='POST'){
            $getdata =array('to_email'=>$user_info['email'],
                'from_email'=>$settings['admin_from_mail_id'],
                'subject'=>$this->input->post('subject'),
                'message'=>$this->input->post('message'),
                'date'=>date('Y-m-d h:m:s')
            );

            $this->common_model->AddRecord($getdata, 'ds_subscribe_log');
            redirect('admin/user_management/news_letter');
        }
        $message = '<div class="alert alert-success"><p>Email has been send successfully.</p></div>';
        //redirect('admin/user_management/all_subscription');


    }

    public function news_letter(){
        $this->db->from('ds_subscribe_log');
        $this->db->order_by('ds_subscribe_log.id', 'DESC');

        $data['subscribe'] = $this->db->get();
        $this->load->view('subscription/newsletter', $data);

    }

    public function delete_newsletter(){
        $id = $this->uri->segment(4);
        $this->common_model->Delete('ds_subscribe_log', $id, 'id');
        $message = '<div class="alert alert-success"><p>Email has been deleted successfully.</p></div>';
        $this->session->set_flashdata('success', $message);
        redirect('admin/user_management/news_letter');
    }

    public function all_subscription()
    {
        //$data['users'] = $this->common_model->RetriveRecordByWhere('ds_subscribed', array());
        $this->db->select('*');

        $this->db->from('ds_subscribed');
        $this->db->order_by('ds_subscribed.id', 'DESC');

        $data['users'] = $this->db->get();


        $this->load->view('subscription/all-subscription', $data);
    }

    public function delete_subscription()
    {
        $id = $this->uri->segment(4);
        $this->common_model->Delete('ds_subscribed', $id, 'id');
        $message = '<div class="alert alert-success"><p>Email has been deleted successfully.</p></div>';
        $this->session->set_flashdata('success', $message);
        redirect('admin/user_management/all_subscription');
    }

    public function view_service()
    {
        $user_id = $this->uri->segment(4);
        if ($_POST) {
            $getData_v2 = array(
                'about_work' => $this->input->post('about_work'),
            );
            //print_r( $getData_v2);
            $getData_v2_insert = array(
                'user_id' => $user_id,
                'about_work' => $this->input->post('about_work'),
            );
            foreach ($_POST['service_id'] as $key => $val) {
                $getData_service = array();
                $getData_service['artist_id'] = $user_id;
                $getData_service['service_type_id'] = $val;
                if ($_POST['service_description'][$key] != '') {
                    $getData_service['description'] = $_POST['service_description'][$key];
                }
                if ($_POST['service_cost'][$key] != '') {
                    $getData_service['cost'] = $_POST['service_cost'][$key];
                }
                $get_ser = $this->common_model->RetriveRecordByWhere('ds_all_artist_services_details', array('service_type_id' => $key, 'artist_id' => $user_id));
                $result = $get_ser->result();
                if (count($result) > 0) {
                    $this->common_model->UpdateRecord($getData_service, 'ds_all_artist_services_details', 'id', $result[0]->id);
                } else {
                    $this->common_model->AddRecord($getData_service, 'ds_all_artist_services_details');
                }
                if ($_FILES['profile_image']['name'] != '') {
                    $ext = strtolower(pathinfo($_FILES['profile_image']['name'], PATHINFO_EXTENSION));
                    $target_dir = "uploads/artist/";
                    $file_name = time() . '_profile_image.' . $ext;
                    $target_file = $target_dir . $file_name;
                    move_uploaded_file($_FILES["profile_image"]["tmp_name"], $target_file);

                    $getData_v2['profile_image'] = $file_name;
                    $getData_v2_insert['profile_image'] = $file_name;
                }
                $get_other_details = $this->common_model->RetriveRecordByWhere('ds_user_other_details', array('user_id' => $user_id));
                $result_other_details = $get_other_details->result();
                if (count($result_other_details) > 0) {
                    $this->common_model->UpdateRecord($getData_v2, 'ds_user_other_details', 'user_id', $user_id);
                } else {
                    $this->common_model->AddRecord($getData_v2_insert, 'ds_user_other_details');
                }
                $message = '<div class="alert alert-success"><p>You have successfully update your service profile.</p></div>';
                $this->session->set_flashdata('success', $message);
                // redirect('admin/user_management/all_designer');
            }
        }

        $this->db->select('ds_users.*,ds_users.id as user_main_id,ds_user_other_details.*');
        $this->db->from('ds_users');
        $this->db->Join('ds_user_other_details', 'ds_user_other_details.user_id = ds_users.id', 'left');
        $this->db->where('ds_users.id', $user_id);
        $data['query'] = $this->db->get()->row_array();
        $data['all_services'] = $this->common_model->RetriveRecordByWhere('ds_all_artist_services_details', array('artist_id' => $user_id));
        $data['services'] = $this->common_model->RetriveRecordByWhere('ds_services_types', array('status' => 'Y'));
        $this->load->view('user/view-service', $data);
    }

    public function view_designstore_service()
    {
        $user_id = $this->uri->segment(4);
        if ($_POST) {
            $data = array();
            $getData = array(
                'shop_name' => $this->input->post('shop_name'),
                'shop_description' => $this->input->post('shop_description'),
                'featured_image' => json_encode($this->input->post('featured_product'), true),
                'products' => json_encode($this->input->post('products'), true),
                'title' => $this->input->post('title'),
                'text' => $this->input->post('text'),
                'message_heading' => $this->input->post('message_heading'),
                'message_content' => $this->input->post('message_content'),
                'user_id' => $user_id

            );
            if ($_FILES['banner_image']['name'] != '') {
                $ext = strtolower(pathinfo($_FILES['banner_image']['name'], PATHINFO_EXTENSION));
                $target_dir = "uploads/product/";
                $file_name = time() . '_product_main_image.' . $ext;
                $target_file = $target_dir . $file_name;
                move_uploaded_file($_FILES["banner_image"]["tmp_name"], $target_file);

                $getData['banner_image'] = $file_name;
            }
            if ($_FILES['portfolio_image']['name'] != '') {
                $ext = strtolower(pathinfo($_FILES['portfolio_image']['name'], PATHINFO_EXTENSION));
                $target_dir = "uploads/product/";
                $file_name = time() . '_product_main_image3.' . $ext;
                $target_file = $target_dir . $file_name;
                move_uploaded_file($_FILES["portfolio_image"]["tmp_name"], $target_file);

                $getData['portfolio_image'] = $file_name;
            }
            if ($_FILES['background_image']['name'] != '') {
                $ext = strtolower(pathinfo($_FILES['background_image']['name'], PATHINFO_EXTENSION));
                $target_dir = "uploads/product/";
                $file_name = time() . '_product_main_image2.' . $ext;
                $target_file = $target_dir . $file_name;
                move_uploaded_file($_FILES["background_image"]["tmp_name"], $target_file);

                $getData['background_image'] = $file_name;
            }


            $this->common_model->UpdateRecord($getData, 'ds_shop_store_details', 'user_id', $user_id);

            $query = $this->db->select('ds_shop_store_details.*')
                ->from('ds_shop_store_details')
                ->where(array('user_id' => $user_id))
                ->get();
            $chkUserExist = $query->num_rows();
//echo $this->db->last_query();
            $chkUserExist = $query->num_rows();

            if ($chkUserExist == 0) {
                $getaddressData = array(
                    'shop_name' => $this->input->post('shop_name'),
                    'shop_description' => $this->input->post('shop_description'),
                    'featured_image' => json_encode($this->input->post('featured_product'), true),
                    'title' => $this->input->post('title'),
                    'text' => $this->input->post('text'),
                    'user_id' => $user_id
                );

                if ($_FILES['banner_image']['name'] != '') {
                    $ext = strtolower(pathinfo($_FILES['banner_image']['name'], PATHINFO_EXTENSION));
                    $target_dir = "uploads/product/";
                    $file_name = time() . '_product_main_image.' . $ext;
                    $target_file = $target_dir . $file_name;
                    move_uploaded_file($_FILES["banner_image"]["tmp_name"], $target_file);

                    $getData['banner_image'] = $file_name;
                }
                if ($_FILES['portfolio_image']['name'] != '') {
                    $ext = strtolower(pathinfo($_FILES['portfolio_image']['name'], PATHINFO_EXTENSION));
                    $target_dir = "uploads/product/";
                    $file_name = time() . '_product_main_image3.' . $ext;
                    $target_file = $target_dir . $file_name;
                    move_uploaded_file($_FILES["portfolio_image"]["tmp_name"], $target_file);

                    $getData['portfolio_image'] = $file_name;
                }
                if ($_FILES['background_image']['name'] != '') {
                    $ext = strtolower(pathinfo($_FILES['background_image']['name'], PATHINFO_EXTENSION));
                    $target_dir = "uploads/product/";
                    $file_name = time() . '_product_main_image2.' . $ext;
                    $target_file = $target_dir . $file_name;
                    move_uploaded_file($_FILES["background_image"]["tmp_name"], $target_file);

                    $getData['background_image'] = $file_name;
                }

                $this->common_model->AddRecord($getData, 'ds_shop_store_details');

            }
            $message = '<div class="alert alert-success"><p> Service Profile Details has been successfully updated.</p></div>';
            $this->session->set_flashdata('success', $message);
//redirect('admin/user_management/all_designstore');
        }


        $data['products2'] = $this->common_model->RetriveRecordByWhere('ds_products', array('u_id' => $user_id));
        $data['query'] = $this->common_model->RetriveRecordByWhereRow('ds_shop_store_details', array('user_id' => $user_id));
        $this->load->view('user/view-store-service', $data);
    }
}
